kind: Service
apiVersion: v1
metadata:
  name: csi-hostpath-provisioner
  namespace: kube-system
  labels:
    app: csi-hostpath-provisioner
spec:
  selector:
    app: csi-hostpath-provisioner
  ports:
  - name: dummy
    port: 12345
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-hostpath-provisioner
  namespace: kube-system
spec:
  serviceName: "csi-hostpath-provisioner"
  replicas: 1
  selector:
    matchLabels:
      app: csi-hostpath-provisioner
  template:
    metadata:
      labels:
        app: csi-hostpath-provisioner
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-hostpath-registrar
            topologyKey: kubernetes.io/hostname
      serviceAccountName: csi-provisioner
      containers:
      - name: csi-provisioner
        image: quay.io/k8scsi/csi-provisioner:v1.4.0
        args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --feature-gates=Topology=true
        securityContext:
          # This is necessary only for system with SELinux, where
          # non-privileged sidecare containers cannot access unit domain socket
          # created by privileged CSI driver container.
          privileged: true
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/hostpath.csi.k8s.io
          type: DirectoryOrCreate
        name: socket-dir
  